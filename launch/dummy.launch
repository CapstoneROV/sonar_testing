<launch>

  <!-- Arguments -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="name" default="dummy"/>
  <arg name="topics_ns" default="dummy"/>

  <!-- Send URDF to param server -->
  <param name="robot_description" textfile="$(find sonar_testing)/urdf/dummy.urdf"/>

  <!-- Launch world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- This can be run in terminal after launching world, e.g. 'roslaunch gazebo_ros empty_world.launch -->
  <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -z 1 -model dummy" respawn="false" output="screen"/>

  <!-- Launch RVIZ -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find sonar_testing)/rviz/sonar_view.rviz"/>

  <!-- Publish robot TF, using joint states published in the URDF -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="dummy_publisher">
      <remap from="/joint_states" to="/dummy/joint_states"/>
  </node>

  <!-- Bridge map and base_link, using gazebo_ros_p3d output in the URDF -->
  <node pkg="message_to_tf" type="message_to_tf" name="map_to_dummy" args="dummy/base_link"/>

  <!-- Launch sonar image converters, from fan shape to rectangular -->
  <include file="$(find sonar_testing)/launch/sonar_transformer.launch">
    <arg name="fan_topic" value="/dummy/mbe_sonar"/>
    <arg name="rect_topic" value="/dummy/mbe_sonar_rect"/>
    <arg name="origin_x" value="0.0"/>
    <arg name="origin_y" value="0.0"/>
    <arg name="top_x" value="0.0"/>
    <arg name="top_y" value="0.0"/>
  </include>
</launch>
